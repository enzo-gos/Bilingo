version: '3'

x-webservice: &webservice
  build:
    context: .
  hostname: localhost
  networks:
    - bilingo-net
    - proxy
  env_file:
    - .env
  environment:
    FORCE_COLOR: 1
    DEBUG_COLORS: 'true'
    TERM: xterm-256color
    COLORTERM: truecolor
  restart: on-failure:3
  tty: true

services:
  bilingodb:
    image: postgres
    restart: always
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 1s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    networks:
      - bilingo-net

  bilingords:
    image: redis:latest
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 1s
      timeout: 5s
      retries: 5
    networks:
      - bilingo-net

  bilingo:
    <<: *webservice
    image: wgmin/bilingo
    container_name: bilingo
    ports:
      - 3001:3000
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.bilingo.rule=Host(`bilingo.mtech.id.vn`)
      - traefik.http.routers.bilingo.entrypoints=websecure
      - traefik.http.routers.bilingo.tls=true
      - traefik.http.routers.bilingo.tls.certresolver=letsencrypt
    depends_on:
      bilingodb:
        condition: service_healthy
      bilingords:
        condition: service_healthy

  bilingo-sidekiq:
    <<: *webservice
    image: wgmin/bilingo-sidekiq
    container_name: bilingo-sidekiq
    command: bundle exec sidekiq
    depends_on:
      - bilingo

networks:
  bilingo-net:
    driver: bridge
  proxy:
    external: true
