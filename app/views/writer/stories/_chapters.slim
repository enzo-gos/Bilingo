.chapters
  .create-group
    = link_to writer_story_chapters_path(story), data: { turbo_method: :post }, class: 'create-btn' do
      = mi.shape(:add).round.md_18
      = t('chapter_status.new_part')

  .sortable-list data-controller='sortable' data-sortable-url==order_writer_story_chapter_path(story_id: story.id, id: ':id')
    - format_chapters(story).map do |chapter|
      .sortable-item data-id==chapter[:id]
        .drag-indicator
          = mi.shape(:drag_indicator)
        .sortable-story
          .story-wrapper
            .story-info
              = link_to edit_writer_story_chapter_path(story_id: story.id, id: chapter[:id]) do
                strong.chapter-name == optional_chapter_title(chapter)
              .chapter-info
                .chapter-status
                  - if chapter[:published]
                    strong.publish = t('chapter_status.published')
                  - else
                    strong.draft = t('chapter_status.draft')
                  span -
                  small = chapter[:updated]
                .chapter-analysis
                  .analysis-info
                    = mi.shape(:visibility).css_class('analysis-icon')
                    = chapter[:views]
                  .analysis-info
                    = mi.shape(:comment).css_class('analysis-icon')
                    = chapter[:comments]
          .story-action
            .action-group
              .dropdown
                .action-btn
                  = mi.shape(:more_horiz).css_class('action-btn-icon')
                .dropdown-list
                  = link_to writer_story_chapter_path(story_id: story.id, id: chapter[:id]), class: 'dropdown-item', data: { turbo_method: :delete, turbo_confirm: t('confirmation.chapters.delete') } do
                    = mi.shape(:delete).md_18.css_class('action-btn-icon')
                    = t('writer_space.delete')
                  - if chapter[:published]
                    = link_to unpublish_writer_story_chapter_path(story_id: story.id, id: chapter[:id]), data: { turbo_method: :patch }, class: 'dropdown-item'
                      = mi.shape(:unpublished).md_18.css_class('action-btn-icon')
                      = t('writer_space.unpublish')
                  button.dropdown-item
                    = mi.shape(:visibility).md_18.css_class('action-btn-icon')
                    = t('writer_space.view_as_reader')
